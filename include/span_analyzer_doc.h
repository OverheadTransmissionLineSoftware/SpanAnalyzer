// This is free and unencumbered software released into the public domain.
// For more information, please refer to <http://unlicense.org/>

#ifndef OTLS_SPANANALYZER_SPANANALYZERDOC_H_
#define OTLS_SPANANALYZER_SPANANALYZERDOC_H_

#include <vector>

#include "models/transmissionline/weather_load_case.h"
#include "wx/docview.h"

#include "span.h"

/// \todo unit conversion should be an internal method

/// \par OVERVIEW
///
/// This is a SpanAnalyzer application document, which holds all of the
/// information for a SpanAnalyzer project file.
///
/// \par wxWIDGETS LIBRARY BUILD NOTE
///
/// This class requires that the wxWidgets library deviate from the standard
/// build. The wxUSE_STD_IOSTREAM configuration flag must be set to 0, which will
/// force wxWidgets to generate wxInputStream/wxOutputStream classes on the
/// LoadObject() and SaveObject() functions. This is required because this class
/// uses a series of XML handlers to load/save the document, and wxWidgets does
/// not allow std::streams to be used with the XmlDocument::Load() and
/// XmlDocument::Save() functions.
class SpanAnalyzerDoc : public wxDocument {
 public:
  /// \brief Constructor.
  SpanAnalyzerDoc();

  /// \brief Destructor.
  ~SpanAnalyzerDoc();

  /// \brief Loads the document.
  /// \param[in] stream
  ///   The input stream generated by wxWidgets.
  /// \return The input stream.
  wxInputStream& LoadObject(wxInputStream& stream);

  /// \brief Saves the document.
  /// \param[out] stream
  ///   The output stream generated by wxWidgets.
  /// \return The output stream.
  wxOutputStream& SaveObject(wxOutputStream& stream);

  /// \brief Gets the spans.
  /// \return The spans.
  std::vector<Span>* spans();

  /// \brief Gets the weathercases.
  /// \return The weathercases.
  std::vector<WeatherLoadCase>* weathercases();

 private:
  /// \var spans_
  ///   The collection of spans.
  std::vector<Span> spans_;

  /// \var weathercases_
  ///   The weather cases.
  std::vector<WeatherLoadCase> weathercases_;

  wxDECLARE_DYNAMIC_CLASS(SpanAnalyzerDoc);
};

#endif  // OTLS_SPANANALYZER_SPANANALYZERDOC_H_
